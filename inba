#include<iostream>
#include<vector>
#include<queue>
using namespace std;
void bfs(int idx,std::vector<std::vector<int> > v,std::vector<int>& l, std::vector<int>& f)
{
    static int call = 1;
    std::cout << "Call number: " << call << std::endl;
    std::cout << "Index :" << idx << std::endl;
    std::queue<int> q;
    q.push(idx);
    l[idx] = call;
    int p,u;
    while(!q.empty()){
        p = q.front();
        q.pop();
        for(int i = 0; i < v[idx].size(); ++i){
            u = v[p][i];
            if(l[u] == 0){
                q.push(u);
                l[u] = call;
                f[u] = p;
            }
        }
    }
    call++;
}



int main()
{
    vector<int> l(14);
    vector<int> f(14);
    vector<vector<int> > v(14);
    for(auto& x : f){
        x = -1;
    }
    int idx,val;
    for(int i = 0; i < 999; ++i){
        std::cout << i << ": ";
        cin >> idx >> val;
        if(idx == -1) break;
        v[idx].push_back(val);
    }
    for(int i = 0 ; i < v.size(); ++i){
        for(auto& x : v[i]){
            std::cout << i << " : " << x << std::endl;
        }
    }
   for(int i = 0; i < l.size(); ++i){
        if(l[i] == 0){
            bfs(i,v,l,f);
        }
    }
    std::cout << "idx : value";
    for(int i = 0 ; i < l.size(); ++i){
        std::cout << i << ":" << l[i] << std::endl;
    }





}
